//解决ie下console未定义
if (!window.console || !console.firebug){
    var names = ["log", "debug", "info", "warn", "error", "assert", "dir", "dirxml", "group", "groupEnd", "time", "timeEnd", "count", "trace", "profile", "profileEnd"];

    window.console = {};
    for (var i = 0; i < names.length; ++i)
        window.console[names[i]] = function() {}
}

jQuery(document).ready(function(){
	/*
	focus("left",".big_focus",".big_focus_btn",".big_focus_btnl",".big_focus_btnr","click",".big_focus_pic",1,"100%",306,3000,500,1)
	focus("up",".top_focus",".top_focus_btn",".top_focus_btnl",".top_focus_btnr","click",".top_focus_pic",1,500,306,3000,500,1)
	focus("left",".left_focus",".left_focus_btn",".left_focus_btnl",".left_focus_btnr","click",".left_focus_pic",1,500,306,3000,500,1)
	focus("fade",".fade_focus",".fade_focus_btn",".fade_focus_btnl",".fade_focus_btnr","click",".fade_focus_pic",1,500,306,3000,500,1)
	*/

	$(".nav .li1").hover(function(){
		$(this).find(".nav2").show();
	},function(){
		$(this).find(".nav2").hide();
	});
	$(".nav2").hover(function(){
		$(this).parent().addClass("on");
	},function(){
		$(this).parent().removeClass("on");
	});

})
//登陆
$(function(){
    $(".person_login_btn2").click(function(){
        $(".person_login_txt").val("");
    })
})

//个人中心
$(function(){
    $(".person_leftNav_li1,.person_leftNav_li2").hover(function(){
        $(this).addClass("on");
    },function(){
        $(this).removeClass("on");
    })

})



window.onresize = function(){
	win980()
}
$(function(){
	win980()
});
function swiperW(id,w){
	var num = $(" .swiper-slide").size()
	var width = w;
	$(id +" .swiper-wrapper").css({"width":num*w+"px"}).find(".swiper-slide").css({"width":w+"px"});
//	alert($(id +" .swiper-wrapper").html);
//	alert(id);
//	alert(num*w);
//	alert(w);
}


function win980(){
		if ($(window).width()<1160){
			$("body").addClass("w980");
			//$(".cadre_banner").find(".swiper-slide").css({"width":"740px"});
			//swiperW(".cadre_banner","740")

		}else{
			$("body").removeClass("w980");
			//$(".cadre_banner").find(".swiper-slide").css({"width":"880px"});

		}
}

/* 回到顶部 */
jQuery.fn.scrollTo = function(speed) {
	var targetOffset = $(this).offset().top;
	$('html,body').stop().animate({scrollTop: targetOffset}, speed);
	return this;
};
//按钮显隐函数
//goBtn：按钮元素
//goNum——0按钮一直显示   30滚动30距离显示  "bottom"滚动到底部显示
function goUp(goBtn,goNum){
	goNum ? $(goBtn).hide() :$(goBtn).show();
	$(window).scroll(function (){
		var offsetTop = $(window).scrollTop(),
			 offsetBottom = $(document).height() - $(window).height(),
			 num = offsetTop>goNum ? $(goBtn).show() : $(goBtn).hide(),
			 bottom = offsetTop >= offsetBottom ? $(goBtn).show() : false;
		goNum ? num : false;
		goNum == "bottom" ? bottom : false;
	});
}
/* 回到顶部 end */






$.fn.slide = function(options) {
	var defaults = {
		type:         'left',
		btn:          '.slide_btn',
		leftBtn:      '.slide_left',
		rightBtn:     '.slide_right',
		btnActive:    'click',
		picBox:       '.slide_pic',
		num:          '1',
		conWidth:     '100%',
		conHeidth:    '100%',
		time:         '3000',
		speed:        '500',
		play:         '1',
		percent:      '0'
	};
	var
		obj       =     $.extend(defaults,options),
		self      =     $(this),
		picUl     =     self.find(obj.picBox+">ul"),
		picLi     =     self.find(obj.picBox+">ul>li"),
		btnLi     =     self.find(obj.btn+">ul>li"),
		leftBtn   =     self.find(obj.leftBtn),
		rightBtn  =     self.find(obj.rightBtn),
		type      =     obj.type,
		conWidth  =     obj.conWidth,
		conHeight  =    obj.conHeight,
		speed     =     obj.speed,
		percent   =     obj.percent,
		len       =     Math.ceil(picLi.length/obj.num),
		index     =     0,
		timer;

	if(percent == 1 && type == "left"){
		picUl.css({"width":100*len+"%"});
		picLi.css({"width":100/len+"%"});
		$(this).animate({"opacity":"1"},500);
	}

	btnLi.bind(obj.btnActive,function(){
		if(index != btnLi.index(this)){
			index = btnLi.index(this);
			goanimate(index);
		}
	})

	leftBtn.click(function(){
		if(index==0){index=len-1;}else{index--;}
		goanimate(index);
	})

	rightBtn.click(function(){
		if(index==len-1){index=0;}else{index++;}
		goanimate(index);
	})

	if(obj.play==1){
		self.hover(function(){
			clearInterval(timer);
		},function(){
			clearInterval(timer);
			timer = setInterval(function(){
				if(index==len-1){index=0;}else{index++;}
				goanimate(index);
			},obj.time);
		}).trigger("mouseleave");
	}

	var goanimate = function(index){
		if(percent == "1" && type == "left"){
			picUl.stop().animate({"marginLeft":-index*100 +"%"},speed);
		}
		if(percent == "0" && type == "left"){
			picUl.stop().animate({"marginLeft":-index*conWidth},speed);
		}
		if(percent == "0" && type == "top"){
			picUl.stop().animate({"marginTop":-index*conHeight},speed);
		}
		if(percent == "0" && type == "fade"){
			picLi.stop(false,true).fadeOut();
			picLi.eq(index).stop(false,true).fadeIn();
		}
		btnLi.removeClass("active").eq(index).addClass("active");
	}

}

$(function(){
	//通用Tab滑过切换
	$(".J-tab").css({"display":"none"});
	$(".J-tab.active").css({"display":"block"});
	$(".tabHover>li").hover(function(){
		var index = $(this).index();
		var thisList = $(this).parent().find("li");
		var thisId = $(this).parent().attr("id");
		thisList.removeClass("active").eq(index).addClass("active");
		$("#"+thisId+"_con>.J-tab").removeClass("active").hide().eq(index).addClass("active").show();
	})
	//通用Tab点击切换
	$(".J-tab").css({"display":"none"});
	$(".J-tab.active").css({"display":"block"});
	$(".tabClick>li").click(function(){
		var index = $(this).index();
		var thisList = $(this).parent().find("li");
		var thisId = $(this).parent().attr("id");
		thisList.removeClass("active").eq(index).addClass("active");
		$("#"+thisId+"_con>.J-tab").removeClass("active").hide().eq(index).addClass("active").show();
	})
})